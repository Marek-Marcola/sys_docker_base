ARG FROM
FROM $FROM

ARG DATE
ARG FROM
ARG TYPE
ARG REPO
ARG VER

LABEL info.from="$FROM"
LABEL info.name="$REPO:$VER"
LABEL info.date="$DATE"

ENV INFO_DATE=$DATE INFO_REPO=$REPO INFO_VER=$VER INFO_FROM=$FROM

RUN set -ex;\
  export DEBIAN_FRONTEND=noninteractive;\
  apt-get update;\
  apt-get -yqq install python3-pygments;\
  apt-get clean;\
  groupadd -g 321 git;\
  useradd -u 321 -g 321 -m git;\
  usermod -a -G git none;\
  cd /usr/local;\
  curl -sS -L -k -f http://repo/sw/opensource/cgit/bin/cgit-$VER-$OS_NAME-$OS_ARCH.tar.gz | tar xzf -;\
  ln -snfv cgit-$VER cgit;\
  mkdir -pv /usr/local/etc/cgit;\
  V=$(curl -s http://repo/sw/opensource/pandoc/bin/version.txt | grep ^pandoc: | awk '{print $2}');\
  curl -sS -L -k -f http://repo/sw/opensource/pandoc/bin/pandoc-$V-linux-amd64.tar.gz | tar xzf -;\
  ln -snfv pandoc-$V pandoc;\
  ln -snfv /usr/local/pandoc/bin/pandoc /usr/bin;\
  echo "info.vers = pandoc/$V" >> /tmp/vers.txt;\
  S=cgit-about-formatting-pandoc.sh;\
  curl -sS -L -k -f -o /usr/local/bin/$S http://repo/sw/opensource/cgit/filter/$S\
    && (chmod a+x /usr/local/bin/$S)\
    || (echo Filter $S not available);\
  /usr/local/cgit/www/cgi-bin/cgit.cgi --version;

RUN set -ex;\
 (echo "info.date = $DATE";\
  echo "info.name = $REPO:$VER";\
  echo "info.type = ${TYPE:-[none]}";\
  echo "info.from = $FROM";\
  [ -f /tmp/vers.txt ] && (cat /tmp/vers.txt && rm -f /tmp/vers.txt) || true;\
 ) > /version.d/version-$REPO.txt;
